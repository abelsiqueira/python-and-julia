name: Docker deployment

on:
  push:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.8.16', '3.9.16', '3.10.10', '3.11.2']
        julia_version: ['1.6.7', '1.7.3', '1.8.5']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Add TAGNAME to env
        run: |
          PYVER=$(echo ${{ matrix.python_version }} | cut -d"." -f1-2)
          JLVER=$(echo ${{ matrix.julia_version }}  | cut -d"." -f1-2)
          echo "TAGNAME=abelsiqueira/python-and-julia:py${PYVER}-jl${JLVER}" >> $GITHUB_ENV

      - name: Build the image for testing
        uses: docker/build-push-action@v4
        with:
          build-args: |
            PYTHON_VERSION=${{ matrix.python_version }}
            JULIA_VERSION=${{ matrix.julia_version }}
          context: .
          load: true
          tags: python-and-julia:test
      - name: Test the built image
        run: |
          docker run python-and-julia:test python -V
          docker run python-and-julia:test julia -v

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and, if it is not a pull request, push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          build-args: |
            PYTHON_VERSION=${{ matrix.python_version }}
            JULIA_VERSION=${{ matrix.julia_version }}
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.TAGNAME }}
          labels: ${{ steps.meta.outputs.labels }}
